pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                git 'https://github.com/ishvit23/ASSIGNMENT_2.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                bat 'docker build -t flask-docker-app .'
            }
        }

        stage('Run Docker Container') {
            steps {
                // Stop & remove previous container if running
                bat 'docker stop flask-app || echo "Not running"'
                bat 'docker rm flask-app || echo "Not found"'

                // Run container on port 5000
                bat 'docker run -d --name flask-app -p 5000:5000 flask-docker-app'
            }
        }

        stage('Verify App Running') {
            steps {
                // Wait a bit for the app to start
                bat 'ping -n 6 127.0.0.1 > nul'

                // Check if app returns HTTP 200
                bat '''
                for /f %%i in ('curl -s -o nul -w "%%{http_code}" http://localhost:5000') do set result=%%i
                if NOT "%result%"=="200" exit /b 1
                '''
            }
        }
    }

    post {
        always {
            // Cleanup after build
            bat 'docker stop flask-app || echo "Not running"'
            bat 'docker rm flask-app || echo "Not found"'
        }
    }
}
