pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image and keep reference
                    def image = docker.build('flask-docker-app')
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    bat '''
                        docker stop flask-app || echo Container not running
                        docker rm flask-app || echo Container not found
                        docker run -d --name flask-app -p 5000:5000 flask-docker-app
                    '''
                }
            }
        }

        stage('Verify Flask App') {
            steps {
                script {
                    // Wait ~10 seconds for container to start (ping localhost 11 times)
                    bat 'ping -n 11 127.0.0.1 > nul'

                    // Check if Flask app is responding with HTTP 200
                    def response = bat(returnStdout: true, script: 'curl -s -o nul -w "%{http_code}" http://localhost:5000').trim()

                    if (response != '200') {
                        error("Flask app did not respond with HTTP 200 OK. Got: ${response}")
                    } else {
                        echo "Flask app is running and responding with HTTP 200 OK."
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                // Stop and remove container after build to clean up
                bat '''
                    docker stop flask-app || echo Container not running
                    docker rm flask-app || echo Container not found
                '''
            }
        }
    }
}
